/**
 * Gulp tasks to build USWDS assets.
 */
const { src, dest, parallel } = require("gulp");
const browserify = require("browserify");
const source = require("vinyl-source-stream");
const buffer = require("vinyl-buffer");
const uglify = require("gulp-uglify");
const rename = require("gulp-rename");
const sass = require("gulp-sass")(require("sass-embedded"));
const postcss = require("gulp-postcss");
const discardComments = require("postcss-discard-comments");
const sourcemaps = require("gulp-sourcemaps");
const autoprefixer = require("autoprefixer");
const header = require("gulp-header");
const prefixer = require('postcss-prefixer');
const csso = require("postcss-csso");
const aliasify = require("aliasify");

const uswds = require("@uswds/compile");

uswds.settings.version = 3;

uswds.paths.dist.js = './app/assets/javascripts';
uswds.paths.dist.css = './app/assets/stylesheets';
uswds.paths.dist.fonts = './public/fonts';
uswds.paths.dist.img = './public/img';
uswds.paths.dist.theme = './uswds';

// Tasks to build USWDS assets for the Touchpoints app.
// These tasks use the USWDS compiler.
exports.copyJS = uswds.copyJS;
exports.compileSass = uswds.compileSass;
exports.copyFonts = uswds.copyFonts;
exports.copyImages = uswds.copyImages;
exports.compileIcons = uswds.compileIcons;
exports.updateUswds = uswds.updateUswds;

// Tasks to build USWDS assets for the embedded survey widget.
// These tasks do not use the USWDS compiler.
exports.bundleWidgetJS = bundleWidgetJS;
exports.compileWidgetSass = compileWidgetSass;
exports.buildWidgetAssets = parallel(bundleWidgetJS, compileWidgetSass);

// TODO: Do we need to babelify?
async function bundleWidgetJS() {
  return browserify("uswds/widget-uswds.js", {
    paths: ['./node_modules'],
    debug: true
  })
    .transform("aliasify", {
      aliases: {
        '../../uswds-core/src/js/config': './uswds/uswds-config.js'
      },
      verbose: true,
      global: true
    })
    .bundle()
    .pipe(source('touchpoints-uswds.js'))
    .pipe(header("/* This file was generated by the gulp task 'bundleWidgetJS'. */\n\n"))
    .pipe(buffer())
    .pipe(dest(uswds.paths.dist.js))
    .pipe(sourcemaps.init({ loadMaps: true }))
    .pipe(uglify())
    .pipe(rename({ suffix: ".min" }))
    .pipe(sourcemaps.write("."))
    .pipe(dest(uswds.paths.dist.js));
}

// TODO: Add browserslistrc
async function compileWidgetSass() {
  const pluginsProcess = [
    discardComments(),
    prefixer({ prefix: 'tp-', ignore: ['is-visible', 'is-hidden']}),
    autoprefixer()
  ];
  const pluginsMinify = [csso({ forceMediaMerge: false })];

  return src("uswds/widget-uswds-styles.scss")
    .pipe(sourcemaps.init({ largeFile: true }))
    .pipe(
      sass({
        includePaths: [
          "node_modules/@uswds/uswds/packages",
        ],
        outputStyle: "expanded",
      }).on("error", function handleError(error) {
        console.log(error);
        this.emit("end");
      })
    )
    .pipe(postcss(pluginsProcess))
    .pipe(header("/* This file was generated by the gulp task 'compileWidgetSass'. */\n\n"))
    .pipe(dest(uswds.paths.dist.css))
    .pipe(postcss(pluginsMinify))
    .pipe(
      rename({
        suffix: ".min",
      })
    )
    .pipe(sourcemaps.write("."))
    .pipe(dest(uswds.paths.dist.css));
}

