{"version":3,"sources":["node_modules/@uswds/uswds/packages/usa-modal/src/index.js","node_modules/@uswds/uswds/packages/uswds-core/src/js/utils/active-element.js","node_modules/@uswds/uswds/packages/uswds-core/src/js/utils/behavior.js","node_modules/@uswds/uswds/packages/uswds-core/src/js/utils/focus-trap.js","node_modules/@uswds/uswds/packages/uswds-core/src/js/utils/scrollbar-width.js","node_modules/@uswds/uswds/packages/uswds-core/src/js/utils/select-or-matches.js","node_modules/@uswds/uswds/packages/uswds-core/src/js/utils/select.js","node_modules/element-closest/element-closest.js","node_modules/keyboardevent-key-polyfill/index.js","node_modules/object-assign/index.js","node_modules/receptor/behavior/index.js","node_modules/receptor/compose/index.js","node_modules/receptor/delegate/index.js","node_modules/receptor/delegateAll/index.js","node_modules/receptor/ignore/index.js","node_modules/receptor/index.js","node_modules/receptor/keymap/index.js","uswds/uswds-config.js","uswds/widget-uswds.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","selectOrMatches","FocusTrap","ScrollBarWidth","behavior","PREFIX","MODAL_CLASSNAME","OVERLAY_CLASSNAME","WRAPPER_CLASSNAME","OPENER_ATTRIBUTE","CLOSER_ATTRIBUTE","FORCE_ACTION_ATTRIBUTE","NON_MODAL_HIDDEN_ATTRIBUTE","MODAL","INITIAL_FOCUS","CLOSE_BUTTON","CLOSERS","NON_MODALS","ACTIVE_CLASS","HIDDEN_CLASS","modal","INITIAL_BODY_PADDING","TEMPORARY_BODY_PADDING","SCROLLBAR_WIDTH","onMenuClose","toggleModal","setTemporaryBodyPadding","window","getComputedStyle","document","body","getPropertyValue","parseInt","replace","event","let","originalOpener","clickedElement","target","openFocusEl","returnFocus","menuButton","forceUserAction","safeActive","classList","contains","modalId","getAttribute","querySelector","targetModal","getElementById","type","hasAttribute","this","Math","floor","random","setAttribute","closest","toggle","style","paddingRight","removeProperty","focusTrap","Escape","update","focus","querySelectorAll","forEach","nonModal","removeAttribute","setModalAttributes","baseComponent","modalContentWrapper","modalID","ariaLabelledBy","ariaDescribedBy","el","setUpModal","originalLocationPlaceHolder","createElement","modalAttributes","Array","from","attributes","display","attribute","name","value","modalComponent","after","overlayDiv","add","append","modalContent","appendChild","init","root","modalWindow","id","modalTrigger","nodeName","addEventListener","preventDefault","teardown","parentElement","startsWith","substr","removeChild","removeEventListener","../../uswds-core/src/js/utils/behavior","../../uswds-core/src/js/utils/focus-trap","../../uswds-core/src/js/utils/scrollbar-width","../../uswds-core/src/js/utils/select-or-matches","./../../../../../../uswds/uswds-config.js","2","3","assign","Behavior","sequence","seq","method","events","props","on","off","object-assign","receptor/behavior","4","keymap","select","activeElement","tabHandler","focusableElements","context","firstTabStop","lastTabStop","tabAhead","tabBack","includes","additionalKeyBindings","tabEventHandler","Esc","keyMappings","Tab","Shift+Tab","keydown","isActive","./active-element","./behavior","./select","receptor","5","outer","inner","visibility","overflow","msOverflowStyle","scrollbarWidth","offsetWidth","parentNode","6","selector","selection","nodeType","matches","push","7","prototype","slice","8","ElementProto","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","elements","ownerDocument","index","Boolean","element","9","keyboardeventKeyPolyfill","polyfill","KeyboardEvent","proto","get","x","key","keys","which","keyCode","isArray","shiftKey","Object","defineProperty","12","13","16","17","18","19","20","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","48","49","50","51","52","53","54","55","56","57","91","93","144","145","181","182","183","186","187","188","189","190","191","192","219","220","221","222","224","225","246","247","248","249","250","251","letter","String","fromCharCode","toLowerCase","toUpperCase","define","amd","10","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","test1","getOwnPropertyNames","test2","test3","order2","map","join","split","err","source","to","val","TypeError","s","arguments","symbols","11","delegate","delegateAll","DELEGATE_PATTERN","popKey","obj","listeners","reduce","memo","handler","match","options","capture","passive","listener","indexOf","_type","concat","remove","../delegate","../delegateAll","functions","some","fn","element-closest","14","compose","selectors","delegates","../compose","15","ignore","./delegate","./delegateAll","./ignore","./keymap","MODIFIERS","Alt","Control","Ctrl","Shift","hasModifiers","modifier","result","_key","undefined","keyboardevent-key-polyfill"],"mappings":"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","file":"touchpoints-uswds.min.js","sourcesContent":["const selectOrMatches = require(\"../../uswds-core/src/js/utils/select-or-matches\");\nconst FocusTrap = require(\"../../uswds-core/src/js/utils/focus-trap\");\nconst ScrollBarWidth = require(\"../../uswds-core/src/js/utils/scrollbar-width\");\nconst behavior = require(\"../../uswds-core/src/js/utils/behavior\");\n\nconst { prefix: PREFIX } = require('./../../../../../../uswds/uswds-config.js');\n\nconst MODAL_CLASSNAME = `${PREFIX}-modal`;\nconst OVERLAY_CLASSNAME = `${MODAL_CLASSNAME}-overlay`;\nconst WRAPPER_CLASSNAME = `${MODAL_CLASSNAME}-wrapper`;\nconst OPENER_ATTRIBUTE = \"data-open-modal\";\nconst CLOSER_ATTRIBUTE = \"data-close-modal\";\nconst FORCE_ACTION_ATTRIBUTE = \"data-force-action\";\nconst NON_MODAL_HIDDEN_ATTRIBUTE = `data-modal-hidden`;\nconst MODAL = `.${MODAL_CLASSNAME}`;\nconst INITIAL_FOCUS = `.${WRAPPER_CLASSNAME} *[data-focus]`;\nconst CLOSE_BUTTON = `${WRAPPER_CLASSNAME} *[${CLOSER_ATTRIBUTE}]`;\nconst OPENERS = `*[${OPENER_ATTRIBUTE}][aria-controls]`;\nconst CLOSERS = `${CLOSE_BUTTON}, .${OVERLAY_CLASSNAME}:not([${FORCE_ACTION_ATTRIBUTE}])`;\nconst NON_MODALS = `body > *:not(.${WRAPPER_CLASSNAME}):not([aria-hidden])`;\nconst NON_MODALS_HIDDEN = `[${NON_MODAL_HIDDEN_ATTRIBUTE}]`;\n\nconst ACTIVE_CLASS = \"usa-js-modal--active\";\nconst PREVENT_CLICK_CLASS = \"usa-js-no-click\";\nconst VISIBLE_CLASS = \"is-visible\";\nconst HIDDEN_CLASS = \"is-hidden\";\n\nlet modal;\nlet INITIAL_BODY_PADDING;\nlet TEMPORARY_BODY_PADDING;\n\nconst isActive = () => document.body.classList.contains(ACTIVE_CLASS);\nconst SCROLLBAR_WIDTH = ScrollBarWidth();\n\n/**\n *  Closes modal when bound to a button and pressed.\n */\nconst onMenuClose = () => {\n  modal.toggleModal.call(modal, false);\n};\n\n/**\n * Set the value for temporary body padding that will be applied when the modal is open.\n * Value is created by checking for initial body padding and adding the width of the scrollbar.\n */\nconst setTemporaryBodyPadding = () => {\n  INITIAL_BODY_PADDING = window\n    .getComputedStyle(document.body)\n    .getPropertyValue(\"padding-right\");\n  TEMPORARY_BODY_PADDING = `${\n    parseInt(INITIAL_BODY_PADDING.replace(/px/, \"\"), 10) +\n    parseInt(SCROLLBAR_WIDTH.replace(/px/, \"\"), 10)\n  }px`;\n};\n\n/**\n *  Toggle the visibility of a modal window\n *\n * @param {KeyboardEvent} event the keydown event.\n * @returns {boolean} safeActive if mobile is open.\n */\nfunction toggleModal(event) {\n  let originalOpener;\n  let clickedElement = event.target;\n  const { body } = document;\n  const safeActive = !isActive();\n  const modalId = clickedElement\n    ? clickedElement.getAttribute(\"aria-controls\")\n    : document.querySelector(\".usa-modal-wrapper.is-visible\");\n  const targetModal = safeActive\n    ? document.getElementById(modalId)\n    : document.querySelector(\".usa-modal-wrapper.is-visible\");\n\n  // if there is no modal we return early\n  if (!targetModal) {\n    return false;\n  }\n\n  const openFocusEl = targetModal.querySelector(INITIAL_FOCUS)\n    ? targetModal.querySelector(INITIAL_FOCUS)\n    : targetModal.querySelector(\".usa-modal\");\n  const returnFocus = document.getElementById(\n    targetModal.getAttribute(\"data-opener\")\n  );\n  const menuButton = body.querySelector(OPENERS);\n  const forceUserAction = targetModal.getAttribute(FORCE_ACTION_ATTRIBUTE);\n\n  // Sets the clicked element to the close button\n  // so esc key always closes modal\n  if (event.type === \"keydown\" && targetModal !== null) {\n    clickedElement = targetModal.querySelector(CLOSE_BUTTON);\n  }\n\n  // When we're not hitting the escape key…\n  if (clickedElement) {\n    // Make sure we click the opener\n    // If it doesn't have an ID, make one\n    // Store id as data attribute on modal\n    if (clickedElement.hasAttribute(OPENER_ATTRIBUTE)) {\n      if (this.getAttribute(\"id\") === null) {\n        originalOpener = `modal-${Math.floor(Math.random() * 900000) + 100000}`;\n        this.setAttribute(\"id\", originalOpener);\n      } else {\n        originalOpener = this.getAttribute(\"id\");\n      }\n      targetModal.setAttribute(\"data-opener\", originalOpener);\n    }\n\n    // This basically stops the propagation if the element\n    // is inside the modal and not a close button or\n    // element inside a close button\n    if (clickedElement.closest(`.${MODAL_CLASSNAME}`)) {\n      if (\n        clickedElement.hasAttribute(CLOSER_ATTRIBUTE) ||\n        clickedElement.closest(`[${CLOSER_ATTRIBUTE}]`)\n      ) {\n        // do nothing. move on.\n      } else {\n        return false;\n      }\n    }\n  }\n\n  body.classList.toggle(ACTIVE_CLASS, safeActive);\n  targetModal.classList.toggle(VISIBLE_CLASS, safeActive);\n  targetModal.classList.toggle(HIDDEN_CLASS, !safeActive);\n\n  // If user is forced to take an action, adding\n  // a class to the body that prevents clicking underneath\n  // overlay\n  if (forceUserAction) {\n    body.classList.toggle(PREVENT_CLICK_CLASS, safeActive);\n  }\n\n  // Temporarily increase body padding to include the width of the scrollbar.\n  // This accounts for the content shift when the scrollbar is removed on modal open.\n  if (body.style.paddingRight === TEMPORARY_BODY_PADDING) {\n    body.style.removeProperty(\"padding-right\");\n  } else {\n    body.style.paddingRight = TEMPORARY_BODY_PADDING;\n  }\n\n  // Handle the focus actions\n  if (safeActive && openFocusEl) {\n    // The modal window is opened. Focus is set to close button.\n\n    // Binds escape key if we're not forcing\n    // the user to take an action\n    if (forceUserAction) {\n      modal.focusTrap = FocusTrap(targetModal);\n    } else {\n      modal.focusTrap = FocusTrap(targetModal, {\n        Escape: onMenuClose,\n      });\n    }\n\n    // Handles focus setting and interactions\n    modal.focusTrap.update(safeActive);\n    openFocusEl.focus();\n\n    // Hides everything that is not the modal from screen readers\n    document.querySelectorAll(NON_MODALS).forEach((nonModal) => {\n      nonModal.setAttribute(\"aria-hidden\", \"true\");\n      nonModal.setAttribute(NON_MODAL_HIDDEN_ATTRIBUTE, \"\");\n    });\n  } else if (!safeActive && menuButton && returnFocus) {\n    // The modal window is closed.\n    // Non-modals now accesible to screen reader\n    document.querySelectorAll(NON_MODALS_HIDDEN).forEach((nonModal) => {\n      nonModal.removeAttribute(\"aria-hidden\");\n      nonModal.removeAttribute(NON_MODAL_HIDDEN_ATTRIBUTE);\n    });\n\n    // Focus is returned to the opener\n    returnFocus.focus();\n    modal.focusTrap.update(safeActive);\n  }\n\n  return safeActive;\n}\n\n/**\n * Creates a placeholder with data attributes for cleanup function.\n * The cleanup function uses this placeholder to easily restore the original Modal HTML on teardown.\n *\n * @param {HTMLDivElement} baseComponent - Modal HTML from the DOM.\n * @returns {HTMLDivElement} Placeholder used for cleanup function.\n */\nconst createPlaceHolder = (baseComponent) => {\n  const modalID = baseComponent.getAttribute(\"id\");\n  const originalLocationPlaceHolder = document.createElement(\"div\");\n  const modalAttributes = Array.from(baseComponent.attributes);\n\n  setTemporaryBodyPadding();\n\n  originalLocationPlaceHolder.setAttribute(`data-placeholder-for`, modalID);\n  originalLocationPlaceHolder.style.display = \"none\";\n  originalLocationPlaceHolder.setAttribute(\"aria-hidden\", \"true\");\n\n  modalAttributes.forEach((attribute) => {\n    originalLocationPlaceHolder.setAttribute(\n      `data-original-${attribute.name}`,\n      attribute.value\n    );\n  });\n\n  return originalLocationPlaceHolder;\n};\n\n/**\n * Moves necessary attributes from Modal HTML to wrapper element.\n *\n * @param {HTMLDivElement} baseComponent - Modal HTML in the DOM.\n * @param {HTMLDivElement} modalContentWrapper - Modal component wrapper element.\n * @returns Modal wrapper with correct attributes.\n */\nconst setModalAttributes = (baseComponent, modalContentWrapper) => {\n  const modalID = baseComponent.getAttribute(\"id\");\n  const ariaLabelledBy = baseComponent.getAttribute(\"aria-labelledby\");\n  const ariaDescribedBy = baseComponent.getAttribute(\"aria-describedby\");\n  const forceUserAction = baseComponent.hasAttribute(FORCE_ACTION_ATTRIBUTE);\n\n  if (!ariaLabelledBy)\n    throw new Error(`${modalID} is missing aria-labelledby attribute`);\n\n  if (!ariaDescribedBy)\n    throw new Error(`${modalID} is missing aria-desribedby attribute`);\n\n  // Set attributes\n  modalContentWrapper.setAttribute(\"role\", \"dialog\");\n  modalContentWrapper.setAttribute(\"id\", modalID);\n  modalContentWrapper.setAttribute(\"aria-labelledby\", ariaLabelledBy);\n  modalContentWrapper.setAttribute(\"aria-describedby\", ariaDescribedBy);\n\n  if (forceUserAction) {\n    modalContentWrapper.setAttribute(FORCE_ACTION_ATTRIBUTE, forceUserAction);\n  }\n\n  // Add aria-controls\n  const modalClosers = modalContentWrapper.querySelectorAll(CLOSERS);\n  modalClosers.forEach((el) => {\n    el.setAttribute(\"aria-controls\", modalID);\n  });\n\n  // Update the base element HTML\n  baseComponent.removeAttribute(\"id\");\n  baseComponent.removeAttribute(\"aria-labelledby\");\n  baseComponent.removeAttribute(\"aria-describedby\");\n  baseComponent.setAttribute(\"tabindex\", \"-1\");\n\n  return modalContentWrapper;\n};\n\n/**\n * Creates a hidden modal content wrapper.\n * Rebuilds the original Modal HTML in the new wrapper and adds a page overlay.\n * Then moves original Modal HTML attributes to the new wrapper.\n *\n * @param {HTMLDivElement} baseComponent - Original Modal HTML in the DOM.\n * @returns Modal component - Modal wrapper w/ nested Overlay and Modal Content.\n */\nconst rebuildModal = (baseComponent) => {\n  const modalContent = baseComponent;\n  const modalContentWrapper = document.createElement(\"div\");\n  const overlayDiv = document.createElement(\"div\");\n\n  // Add classes\n  modalContentWrapper.classList.add(HIDDEN_CLASS, WRAPPER_CLASSNAME);\n  overlayDiv.classList.add(OVERLAY_CLASSNAME);\n\n  // Rebuild the modal element\n  modalContentWrapper.append(overlayDiv);\n  overlayDiv.append(modalContent);\n\n  // Add attributes\n  setModalAttributes(modalContent, modalContentWrapper);\n\n  return modalContentWrapper;\n};\n\n/**\n *  Builds modal window from base HTML and appends to the end of the DOM.\n *\n * @param {HTMLDivElement} baseComponent - The modal div element in the DOM.\n */\nconst setUpModal = (baseComponent) => {\n  const modalID = baseComponent.getAttribute(\"id\");\n\n  if (!modalID) {\n    throw new Error(`Modal markup is missing ID`);\n  }\n\n  // Create placeholder where modal is for cleanup\n  const originalLocationPlaceHolder = createPlaceHolder(baseComponent);\n  baseComponent.after(originalLocationPlaceHolder);\n\n  // Build modal component\n  const modalComponent = rebuildModal(baseComponent);\n\n  // Move all modals to the end of the DOM. Doing this allows us to\n  // more easily find the elements to hide from screen readers\n  // when the modal is open.\n  document.body.appendChild(modalComponent);\n};\n\n/**\n * Removes dynamically created Modal and Wrapper elements and restores original Modal HTML.\n *\n * @param {HTMLDivElement} baseComponent - The modal div element in the DOM.\n */\nconst cleanUpModal = (baseComponent) => {\n  const modalContent = baseComponent;\n  const modalContentWrapper = modalContent.parentElement.parentElement;\n  const modalID = modalContentWrapper.getAttribute(\"id\");\n\n  // if there is no modalID, return early\n  if (!modalID) {\n    return;\n  }\n\n  const originalLocationPlaceHolder = document.querySelector(\n    `[data-placeholder-for=\"${modalID}\"]`\n  );\n\n  if (originalLocationPlaceHolder) {\n    const modalAttributes = Array.from(originalLocationPlaceHolder.attributes);\n    modalAttributes.forEach((attribute) => {\n      if (attribute.name.startsWith(\"data-original-\")) {\n        // data-original- is 14 long\n        modalContent.setAttribute(attribute.name.substr(14), attribute.value);\n      }\n    });\n\n    originalLocationPlaceHolder.after(modalContent);\n    originalLocationPlaceHolder.parentElement.removeChild(\n      originalLocationPlaceHolder\n    );\n  }\n\n  modalContentWrapper.parentElement.removeChild(modalContentWrapper);\n};\n\nmodal = behavior(\n  {},\n  {\n    init(root) {\n      selectOrMatches(MODAL, root).forEach((modalWindow) => {\n        const modalId = modalWindow.id;\n\n        setUpModal(modalWindow);\n\n        // Query all openers and closers including the overlay\n        selectOrMatches(`[aria-controls=\"${modalId}\"]`, document).forEach(\n          (modalTrigger) => {\n            // If modalTrigger is an anchor...\n            if (modalTrigger.nodeName === \"A\") {\n              // Turn anchor links into buttons for screen readers\n              modalTrigger.setAttribute(\"role\", \"button\");\n\n              // Prevent modal triggers from acting like links\n              modalTrigger.addEventListener(\"click\", (e) => e.preventDefault());\n            }\n\n            // Can uncomment when aria-haspopup=\"dialog\" is supported\n            // https://a11ysupport.io/tech/aria/aria-haspopup_attribute\n            // Most screen readers support aria-haspopup, but might announce\n            // as opening a menu if \"dialog\" is not supported.\n            // modalTrigger.setAttribute(\"aria-haspopup\", \"dialog\");\n\n            modalTrigger.addEventListener(\"click\", toggleModal);\n          }\n        );\n      });\n    },\n    teardown(root) {\n      selectOrMatches(MODAL, root).forEach((modalWindow) => {\n        const modalId = modalWindow.id;\n        cleanUpModal(modalWindow);\n\n        selectOrMatches(`[aria-controls=\"${modalId}\"]`, document).forEach(\n          (modalTrigger) =>\n            modalTrigger.removeEventListener(\"click\", toggleModal)\n        );\n      });\n    },\n    focusTrap: null,\n    toggleModal,\n  }\n);\n\nmodule.exports = modal;\n","module.exports = (htmlDocument = document) => htmlDocument.activeElement;\n","const assign = require(\"object-assign\");\nconst Behavior = require(\"receptor/behavior\");\n\n/**\n * @name sequence\n * @param {...Function} seq an array of functions\n * @return { closure } callHooks\n */\n// We use a named function here because we want it to inherit its lexical scope\n// from the behavior props object, not from the module\nconst sequence = (...seq) =>\n  function callHooks(target = document.body) {\n    seq.forEach((method) => {\n      if (typeof this[method] === \"function\") {\n        this[method].call(this, target);\n      }\n    });\n  };\n\n/**\n * @name behavior\n * @param {object} events\n * @param {object?} props\n * @return {receptor.behavior}\n */\nmodule.exports = (events, props) =>\n  Behavior(\n    events,\n    assign(\n      {\n        on: sequence(\"init\", \"add\"),\n        off: sequence(\"teardown\", \"remove\"),\n      },\n      props\n    )\n  );\n","const assign = require(\"object-assign\");\nconst { keymap } = require(\"receptor\");\nconst behavior = require(\"./behavior\");\nconst select = require(\"./select\");\nconst activeElement = require(\"./active-element\");\n\nconst FOCUSABLE =\n  'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex=\"0\"], [contenteditable]';\n\nconst tabHandler = (context) => {\n  const focusableElements = select(FOCUSABLE, context);\n  const firstTabStop = focusableElements[0];\n  const lastTabStop = focusableElements[focusableElements.length - 1];\n\n  // Special rules for when the user is tabbing forward from the last focusable element,\n  // or when tabbing backwards from the first focusable element\n  function tabAhead(event) {\n    if (activeElement() === lastTabStop) {\n      event.preventDefault();\n      firstTabStop.focus();\n    }\n  }\n\n  function tabBack(event) {\n    if (activeElement() === firstTabStop) {\n      event.preventDefault();\n      lastTabStop.focus();\n    }\n    // This checks if you want to set the initial focus to a container\n    // instead of an element within, and the user tabs back.\n    // Then we set the focus to the first\n    else if (!focusableElements.includes(activeElement())) {\n      event.preventDefault();\n      firstTabStop.focus();\n    }\n  }\n\n  return {\n    firstTabStop,\n    lastTabStop,\n    tabAhead,\n    tabBack,\n  };\n};\n\nmodule.exports = (context, additionalKeyBindings = {}) => {\n  const tabEventHandler = tabHandler(context);\n  const bindings = additionalKeyBindings;\n  const { Esc, Escape } = bindings;\n\n  if (Escape && !Esc) bindings.Esc = Escape;\n\n  //  TODO: In the future, loop over additional keybindings and pass an array\n  // of functions, if necessary, to the map keys. Then people implementing\n  // the focus trap could pass callbacks to fire when tabbing\n  const keyMappings = keymap(\n    assign(\n      {\n        Tab: tabEventHandler.tabAhead,\n        \"Shift+Tab\": tabEventHandler.tabBack,\n      },\n      additionalKeyBindings\n    )\n  );\n\n  const focusTrap = behavior(\n    {\n      keydown: keyMappings,\n    },\n    {\n      init() {\n        // TODO: is this desireable behavior? Should the trap always do this by default or should\n        // the component getting decorated handle this?\n        if (tabEventHandler.firstTabStop) {\n          tabEventHandler.firstTabStop.focus();\n        }\n      },\n      update(isActive) {\n        if (isActive) {\n          this.on();\n        } else {\n          this.off();\n        }\n      },\n    }\n  );\n\n  return focusTrap;\n};\n","module.exports = function getScrollbarWidth() {\n  // Creating invisible container\n  const outer = document.createElement(\"div\");\n  outer.style.visibility = \"hidden\";\n  outer.style.overflow = \"scroll\"; // forcing scrollbar to appear\n  outer.style.msOverflowStyle = \"scrollbar\"; // needed for WinJS apps\n  document.body.appendChild(outer);\n\n  // Creating inner element and placing it in the container\n  const inner = document.createElement(\"div\");\n  outer.appendChild(inner);\n\n  // Calculating difference between container's full width and the child width\n  const scrollbarWidth = `${outer.offsetWidth - inner.offsetWidth}px`;\n\n  // Removing temporary elements from the DOM\n  outer.parentNode.removeChild(outer);\n\n  return scrollbarWidth;\n};\n","const select = require(\"./select\");\n/**\n * @name isElement\n * @desc returns whether or not the given argument is a DOM element.\n * @param {any} value\n * @return {boolean}\n */\nconst isElement = (value) =>\n  value && typeof value === \"object\" && value.nodeType === 1;\n\n/**\n * @name selectOrMatches\n * @desc selects elements from the DOM by class selector or ID selector.\n * @param {string} selector - The selector to traverse the DOM with.\n * @param {Document|HTMLElement?} context - The context to traverse the DOM\n *   in. If not provided, it defaults to the document.\n * @return {HTMLElement[]} - An array of DOM nodes or an empty array.\n */\nmodule.exports = (selector, context) => {\n  const selection = select(selector, context);\n  if (typeof selector !== \"string\") {\n    return selection;\n  }\n\n  if (isElement(context) && context.matches(selector)) {\n    selection.push(context);\n  }\n\n  return selection;\n};\n","/**\n * @name isElement\n * @desc returns whether or not the given argument is a DOM element.\n * @param {any} value\n * @return {boolean}\n */\nconst isElement = (value) =>\n  value && typeof value === \"object\" && value.nodeType === 1;\n\n/**\n * @name select\n * @desc selects elements from the DOM by class selector or ID selector.\n * @param {string} selector - The selector to traverse the DOM with.\n * @param {Document|HTMLElement?} context - The context to traverse the DOM\n *   in. If not provided, it defaults to the document.\n * @return {HTMLElement[]} - An array of DOM nodes or an empty array.\n */\nmodule.exports = (selector, context) => {\n  if (typeof selector !== \"string\") {\n    return [];\n  }\n\n  if (!context || !isElement(context)) {\n    context = window.document; // eslint-disable-line no-param-reassign\n  }\n\n  const selection = context.querySelectorAll(selector);\n  return Array.prototype.slice.call(selection);\n};\n","// element-closest | CC0-1.0 | github.com/jonathantneal/closest\n\n(function (ElementProto) {\n\tif (typeof ElementProto.matches !== 'function') {\n\t\tElementProto.matches = ElementProto.msMatchesSelector || ElementProto.mozMatchesSelector || ElementProto.webkitMatchesSelector || function matches(selector) {\n\t\t\tvar element = this;\n\t\t\tvar elements = (element.document || element.ownerDocument).querySelectorAll(selector);\n\t\t\tvar index = 0;\n\n\t\t\twhile (elements[index] && elements[index] !== element) {\n\t\t\t\t++index;\n\t\t\t}\n\n\t\t\treturn Boolean(elements[index]);\n\t\t};\n\t}\n\n\tif (typeof ElementProto.closest !== 'function') {\n\t\tElementProto.closest = function closest(selector) {\n\t\t\tvar element = this;\n\n\t\t\twhile (element && element.nodeType === 1) {\n\t\t\t\tif (element.matches(selector)) {\n\t\t\t\t\treturn element;\n\t\t\t\t}\n\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\t}\n})(window.Element.prototype);\n","/* global define, KeyboardEvent, module */\n\n(function () {\n\n  var keyboardeventKeyPolyfill = {\n    polyfill: polyfill,\n    keys: {\n      3: 'Cancel',\n      6: 'Help',\n      8: 'Backspace',\n      9: 'Tab',\n      12: 'Clear',\n      13: 'Enter',\n      16: 'Shift',\n      17: 'Control',\n      18: 'Alt',\n      19: 'Pause',\n      20: 'CapsLock',\n      27: 'Escape',\n      28: 'Convert',\n      29: 'NonConvert',\n      30: 'Accept',\n      31: 'ModeChange',\n      32: ' ',\n      33: 'PageUp',\n      34: 'PageDown',\n      35: 'End',\n      36: 'Home',\n      37: 'ArrowLeft',\n      38: 'ArrowUp',\n      39: 'ArrowRight',\n      40: 'ArrowDown',\n      41: 'Select',\n      42: 'Print',\n      43: 'Execute',\n      44: 'PrintScreen',\n      45: 'Insert',\n      46: 'Delete',\n      48: ['0', ')'],\n      49: ['1', '!'],\n      50: ['2', '@'],\n      51: ['3', '#'],\n      52: ['4', '$'],\n      53: ['5', '%'],\n      54: ['6', '^'],\n      55: ['7', '&'],\n      56: ['8', '*'],\n      57: ['9', '('],\n      91: 'OS',\n      93: 'ContextMenu',\n      144: 'NumLock',\n      145: 'ScrollLock',\n      181: 'VolumeMute',\n      182: 'VolumeDown',\n      183: 'VolumeUp',\n      186: [';', ':'],\n      187: ['=', '+'],\n      188: [',', '<'],\n      189: ['-', '_'],\n      190: ['.', '>'],\n      191: ['/', '?'],\n      192: ['`', '~'],\n      219: ['[', '{'],\n      220: ['\\\\', '|'],\n      221: [']', '}'],\n      222: [\"'\", '\"'],\n      224: 'Meta',\n      225: 'AltGraph',\n      246: 'Attn',\n      247: 'CrSel',\n      248: 'ExSel',\n      249: 'EraseEof',\n      250: 'Play',\n      251: 'ZoomOut'\n    }\n  };\n\n  // Function keys (F1-24).\n  var i;\n  for (i = 1; i < 25; i++) {\n    keyboardeventKeyPolyfill.keys[111 + i] = 'F' + i;\n  }\n\n  // Printable ASCII characters.\n  var letter = '';\n  for (i = 65; i < 91; i++) {\n    letter = String.fromCharCode(i);\n    keyboardeventKeyPolyfill.keys[i] = [letter.toLowerCase(), letter.toUpperCase()];\n  }\n\n  function polyfill () {\n    if (!('KeyboardEvent' in window) ||\n        'key' in KeyboardEvent.prototype) {\n      return false;\n    }\n\n    // Polyfill `key` on `KeyboardEvent`.\n    var proto = {\n      get: function (x) {\n        var key = keyboardeventKeyPolyfill.keys[this.which || this.keyCode];\n\n        if (Array.isArray(key)) {\n          key = key[+this.shiftKey];\n        }\n\n        return key;\n      }\n    };\n    Object.defineProperty(KeyboardEvent.prototype, 'key', proto);\n    return proto;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define('keyboardevent-key-polyfill', keyboardeventKeyPolyfill);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    module.exports = keyboardeventKeyPolyfill;\n  } else if (window) {\n    window.keyboardeventKeyPolyfill = keyboardeventKeyPolyfill;\n  }\n\n})();\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","const assign = require('object-assign');\nconst delegate = require('../delegate');\nconst delegateAll = require('../delegateAll');\n\nconst DELEGATE_PATTERN = /^(.+):delegate\\((.+)\\)$/;\nconst SPACE = ' ';\n\nconst getListeners = function(type, handler) {\n  var match = type.match(DELEGATE_PATTERN);\n  var selector;\n  if (match) {\n    type = match[1];\n    selector = match[2];\n  }\n\n  var options;\n  if (typeof handler === 'object') {\n    options = {\n      capture: popKey(handler, 'capture'),\n      passive: popKey(handler, 'passive')\n    };\n  }\n\n  var listener = {\n    selector: selector,\n    delegate: (typeof handler === 'object')\n      ? delegateAll(handler)\n      : selector\n        ? delegate(selector, handler)\n        : handler,\n    options: options\n  };\n\n  if (type.indexOf(SPACE) > -1) {\n    return type.split(SPACE).map(function(_type) {\n      return assign({type: _type}, listener);\n    });\n  } else {\n    listener.type = type;\n    return [listener];\n  }\n};\n\nvar popKey = function(obj, key) {\n  var value = obj[key];\n  delete obj[key];\n  return value;\n};\n\nmodule.exports = function behavior(events, props) {\n  const listeners = Object.keys(events)\n    .reduce(function(memo, type) {\n      var listeners = getListeners(type, events[type]);\n      return memo.concat(listeners);\n    }, []);\n\n  return assign({\n    add: function addBehavior(element) {\n      listeners.forEach(function(listener) {\n        element.addEventListener(\n          listener.type,\n          listener.delegate,\n          listener.options\n        );\n      });\n    },\n    remove: function removeBehavior(element) {\n      listeners.forEach(function(listener) {\n        element.removeEventListener(\n          listener.type,\n          listener.delegate,\n          listener.options\n        );\n      });\n    }\n  }, props);\n};\n","module.exports = function compose(functions) {\n  return function(e) {\n    return functions.some(function(fn) {\n      return fn.call(this, e) === false;\n    }, this);\n  };\n};\n","// polyfill Element.prototype.closest\nrequire('element-closest');\n\nmodule.exports = function delegate(selector, fn) {\n  return function delegation(event) {\n    var target = event.target.closest(selector);\n    if (target) {\n      return fn.call(target, event);\n    }\n  }\n};\n","const delegate = require('../delegate');\nconst compose = require('../compose');\n\nconst SPLAT = '*';\n\nmodule.exports = function delegateAll(selectors) {\n  const keys = Object.keys(selectors)\n\n  // XXX optimization: if there is only one handler and it applies to\n  // all elements (the \"*\" CSS selector), then just return that\n  // handler\n  if (keys.length === 1 && keys[0] === SPLAT) {\n    return selectors[SPLAT];\n  }\n\n  const delegates = keys.reduce(function(memo, selector) {\n    memo.push(delegate(selector, selectors[selector]));\n    return memo;\n  }, []);\n  return compose(delegates);\n};\n","module.exports = function ignore(element, fn) {\n  return function ignorance(e) {\n    if (element !== e.target && !element.contains(e.target)) {\n      return fn.call(this, e);\n    }\n  };\n};\n","module.exports = {\n  behavior:     require('./behavior'),\n  delegate:     require('./delegate'),\n  delegateAll:  require('./delegateAll'),\n  ignore:       require('./ignore'),\n  keymap:       require('./keymap'),\n};\n","require('keyboardevent-key-polyfill');\n\n// these are the only relevant modifiers supported on all platforms,\n// according to MDN:\n// <https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState>\nconst MODIFIERS = {\n  'Alt':      'altKey',\n  'Control':  'ctrlKey',\n  'Ctrl':     'ctrlKey',\n  'Shift':    'shiftKey'\n};\n\nconst MODIFIER_SEPARATOR = '+';\n\nconst getEventKey = function(event, hasModifiers) {\n  var key = event.key;\n  if (hasModifiers) {\n    for (var modifier in MODIFIERS) {\n      if (event[MODIFIERS[modifier]] === true) {\n        key = [modifier, key].join(MODIFIER_SEPARATOR);\n      }\n    }\n  }\n  return key;\n};\n\nmodule.exports = function keymap(keys) {\n  const hasModifiers = Object.keys(keys).some(function(key) {\n    return key.indexOf(MODIFIER_SEPARATOR) > -1;\n  });\n  return function(event) {\n    var key = getEventKey(event, hasModifiers);\n    return [key, key.toLowerCase()]\n      .reduce(function(result, _key) {\n        if (_key in keys) {\n          result = keys[key].call(this, event);\n        }\n        return result;\n      }, undefined);\n  };\n};\n\nmodule.exports.MODIFIERS = MODIFIERS;\n","module.exports = {\n  prefix: \"tp-usa\",\n};","const modal = require(\"@uswds/uswds/packages/usa-modal/src/index.js\");\n\n// Initialize modal event listeners\nmodal.on();"]}