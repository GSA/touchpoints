<fieldset class="usa-fieldset radios list-group" role="group" aria-labelledby="<%= question.answer_field %>">
  <legend class="usa-sr-only"><%= question.text %></legend>
  <%= render 'components/question_title', question: question %>
  <br>
  <div class="question-options">
    <% question.question_options.each_with_index do |option, index| %>
    <div class="usa-checkbox">
      <% @option_id = "#{question.answer_field}_#{(index + 1).to_s}" %>
      <%= check_box_tag("#{@option_id}", index + 1, nil, { name: question.answer_field, multiple: true, value: option.text , class: "usa-checkbox__input", required: question.is_required  }) %>
      <%= label_tag(nil, for: "#{question.answer_field}_#{(index + 1).to_s}", class: "usa-checkbox__label") do %>
        <%= option.text %>
      <% end %>
      <% if option.text.upcase == "OTHER" %>
        <input type="text" name="<%= question.answer_field %>_other" id="<%= question.answer_field %>_other" cb_id="<%= @option_id %>" placeholder="Enter other text" class="usa-input other-option" />
        <br/>
      <% end %>
    </div>
    <% end %>
  </div>
</fieldset>
<script>
  // Set radio option value as option text field is updated
  $('.other-option').keyup(function() {
    // strip commas
    var val = $(this).val().replace(/,/g, '');
    // if user has cleared custom text, then reset cb value to "other"
    if (val == '') val = 'other';
    // set the value of the checkbox option to the custom text as entered
    var option_selector = "#" + $(this).attr("cb_id");
    $(option_selector).prop('checked',true);
    $(option_selector).val(val);
  });
</script>
