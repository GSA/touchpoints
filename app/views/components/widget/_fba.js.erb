// Form components are namespaced under 'fba' = 'Feedback Analytics'

(function ( d, N ) { 'use strict';
N.fba = {
	css: '<%= escape_javascript(render partial: "components/widget/widget.css", locals: { touchpoint: touchpoint }) %>',

	init: function( options )
	{
		this.options = options;
		this.loadCss();
		this.loadHtml();
		<% unless local_assigns.has_key?(:suppress_ui) && suppress_ui -%>
		this.loadButton();
		<% end %>
		this.bindEventListeners();
		this.dialogOpen = false; // initially false
		this.successState = false; // initially false
	},
	bindEventListeners: function()
	{
		var self = this;
		d.addEventListener('keyup', function (event) {
			var x = event.keyCode;
			if( x == 27 && self.dialogOpen == true){
				self.closeDialog();
			}});
			d.addEventListener('click', function (event) {
				self.handleClick(event);
			});
		},
		loadCss: function()
		{
			d.head.innerHTML += '<style>' + this.css + '</style>';
		},
		loadHtml: function()
		{
			this.buttonEl = document.createElement('a');
			this.buttonEl.setAttribute('id', 'fba-button');
			this.buttonEl.setAttribute('class', 'fixed-tab-button');
			this.buttonEl.setAttribute('href', '#');
			this.buttonEl.addEventListener( 'click', this.handleButtonClick, false );
			this.buttonEl.innerHTML = this.options.open;

			this.overlayEl = document.createElement('div');
			this.overlayEl.setAttribute('id', 'fba-overlay');

			this.dialogEl = document.createElement('div');
			this.dialogEl.style.display = "none";
			this.dialogEl.setAttribute('id', 'fba-modal');
			this.dialogEl.setAttribute('role', 'dialog');

			<%# inject the form interface %>
			this.dialogEl.innerHTML = "<%= escape_javascript render(partial: 'components/widget/modal', locals: { touchpoint: touchpoint }) %>";
			d.body.appendChild(this.dialogEl);

			d.getElementById('fba-modal-close').addEventListener( 'click', this.handleDialogClose, false );
			d.getElementById('fba-submit').addEventListener( 'click', this.handleSubmitClick, false );
		},
		resetErrors: function()
		{
			var alertElement = document.querySelector("#fba-alert");
			var alertElementBody = document.getElementsByClassName("usa-alert-text")[0];
			var alertErrorElement = document.querySelector("#fba-alert-error");
			var alertErrorElementBody = alertErrorElement.getElementsByClassName("usa-alert-text")[0];
			alertElement.style.display = "none";
			alertElementBody.innerHTML = "";
			alertErrorElement.style.display = "none";
			alertErrorElementBody.innerHTML = "";
		},
		handleClick: function(e) {
			if (N.fba.dialogOpen && !e.target.closest('#fba-button') && !e.target.closest('#fba-modal-dialog')) {
				N.fba.closeDialog();
			}
		},
		handleButtonClick: function(e) {
			e.preventDefault();
			N.fba.loadDialog();
		},
		handleDialogClose: function(e) {
			e.preventDefault();
			N.fba.closeDialog();
		},
		handleSubmitClick: function(e) {
			e.preventDefault();
			d.getElementById('fba-submit').disabled = true;
			N.fba.resetErrors();
			N.fba.sendFeedback();
		},
		loadButton: function()
		{
			d.body.appendChild(this.buttonEl);
		},
		// Used when in a modal
		loadDialog: function()
		{
			d.getElementById('fba-modal').style.display = "block";
			this.dialogOpen = true;
		},
		closeDialog: function()
		{
			d.getElementById('fba-modal').style.display = "none";
			this.resetFormDisplay();
			this.dialogOpen = false;
		},
		sendFeedback: function()
		{
			var form = document.getElementById("touchpoints-form");
			this.ajaxPost(form, this.formSuccess);
		},
		showFormSuccess: function(e)
		{
			var alertElement = document.querySelector("#fba-alert");
			var alertElementBody = document.getElementsByClassName("usa-alert-text")[0];

			// Display success Message
			alertElementBody.innerHTML += "Thank you. Your feedback has been received.";
			alertElement.style.display = "block";

			// Hide Form Elements
			if (document.getElementById('touchpoints-form')) {
				// And clear the Form's Fields
				document.getElementById('touchpoints-form').reset();
				if (document.getElementById('touchpoints-form').getElementsByTagName("fieldset")) {
					var fieldset = document.getElementById('touchpoints-form').getElementsByTagName("fieldset")[0]
					if(fieldset) {
						fieldset.style.display = "none";
					}
				}
			}
		},
		resetFormDisplay: function()
		{
			if (fba.successState === false) {
				return false;
			}

			// Hide and Reset Flash Message
			fba.resetErrors();

			// Re-enable Submit Button
			d.getElementById('fba-submit').disabled = false;

			// Show Form Elements
			if (document.getElementById('touchpoints-form')) {
				if (document.getElementById('touchpoints-form').getElementsByTagName("fieldset")) {
					var fieldset = document.getElementById('touchpoints-form').getElementsByTagName("fieldset")[0]
					if(fieldset) {
						fieldset.style.display = "block";
					}
				}
			}
		},
		formSuccess: function(e) {
			// Clear the alert box
			var alertElement = document.querySelector("#fba-alert");
			var alertElementBody = document.getElementsByClassName("usa-alert-text")[0];
			var alertErrorElement = document.querySelector("#fba-alert-error");
			var alertErrorElementBody = alertErrorElement.getElementsByClassName("usa-alert-text")[0];
			alertElementBody.innerHTML = "";
			alertErrorElementBody.innerHTML = "";

			if (this.readyState === 4) {
	      if (this.status === 201) { // SUCCESS!
					fba.successState = true;
					d.getElementById('fba-submit').disabled = true;
					fba.showFormSuccess();
	      } else if (this.status === 422) { // FORM ERRORS =\
						fba.successState = false;
						d.getElementById('fba-submit').disabled = false;
					  var jsonResponse = JSON.parse(this.response);
					  var errors = jsonResponse.messages;

					  for (var err in errors) {
							if (errors.hasOwnProperty(err)) {
								alertErrorElementBody.innerHTML += err;
								alertErrorElementBody.innerHTML += " ";
								alertErrorElementBody.innerHTML += errors[err];
								alertErrorElementBody.innerHTML += "<br />";
							}
					  }
						alertErrorElement.style.display = "block";
				} else { // SERVER ERROR
					console.log('failed');
					alertErrorElement.style.display = "block";
					alertErrorElementBody.innerHTML += "Server error. We're sorry, but this submission was not successful. The Product Team has been notified.";
				}
			}
		},
		ajaxPost: function (form, callback) {
	    var url = form.action;
	    var xhr = new XMLHttpRequest();

			<% if @touchpoint.form.kind == "open-ended" %>
			var params = {
				answer_01: form.querySelector("#fba-text-body").value
			}
			<% end %>
			<% if @touchpoint.form.kind == "open-ended-with-contact-info" %>
			var params = {
				answer_01: form.querySelector("#fba-text-body").value,
				answer_02: form.querySelector("#fba-text-name").value,
				answer_03: form.querySelector("#fba-text-email").value
			}
			<% end %>
			<% if @touchpoint.form.kind == "a11" %>
			var params = {
				answer_01: form.querySelector("input[name=answer_01]:checked") && form.querySelector("input[name=answer_01]:checked").value,
				answer_02: form.querySelector("input[name=answer_02]:checked") && form.querySelector("input[name=answer_02]:checked").value,
				answer_03: form.querySelector("input[name=answer_03]:checked") && form.querySelector("input[name=answer_03]:checked").value,
				answer_04: form.querySelector("input[name=answer_04]:checked") && form.querySelector("input[name=answer_04]:checked").value,
				answer_05: form.querySelector("input[name=answer_05]:checked") && form.querySelector("input[name=answer_05]:checked").value,
				answer_06: form.querySelector("input[name=answer_06]:checked") && form.querySelector("input[name=answer_06]:checked").value,
				answer_07: form.querySelector("input[name=answer_07]:checked") && form.querySelector("input[name=answer_07]:checked").value,
				answer_08: form.querySelector("input[name=answer_08]:checked") && form.querySelector("input[name=answer_08]:checked").value,
				answer_09: form.querySelector("input[name=answer_09]:checked") && form.querySelector("input[name=answer_09]:checked").value,
				answer_10: form.querySelector("input[name=answer_10]:checked") && form.querySelector("input[name=answer_10]:checked").value,
				answer_11: form.querySelector("input[name=answer_11]:checked") && form.querySelector("input[name=answer_11]:checked").value,
				answer_12: form.querySelector("input[name=answer_12]:checked") && form.querySelector("input[name=answer_12]:checked").value
			}
			<% end %>
			<% if @touchpoint.form.kind == "recruiter" %>
			var params = {
				answer_01: form.querySelector("#fba-text-name").value,
				answer_02: "",
				answer_03: form.querySelector("#fba-text-phone").value,
				answer_04: form.querySelector("#fba-text-email").value
			}
			<% end %>

			// Combine Referrer and Pathname with Form-specific params
			params["referer"] = d.referrer;
			params["page"] = window.location.pathname;

			// Submit Feedback with a POST
			xhr.open("POST", url);
			xhr.setRequestHeader("Content-Type", "application/json; charset=UTF-8;");
	    xhr.onload = callback.bind(xhr);
	    xhr.send(JSON.stringify({
				"submission": params
			}));
		}
	};
}( document, window ));

// Set options for tab text, modal title, description, and alert message after submit.
// These will be mapped to named variables in Google Tag Manager.
var tabText = "Help improve this site";
var formTitle = "Do you have a few minutes to help us test this site?";
var formDesc = "Hi! We’re looking for people to participate ";
var buttonLabel = "Send";
var thankYouText = "Thank you";

fba.init({
	'open': tabText,   //'Help improve this site',
	'title': formTitle,    //'Do you have a few minutes to help us test this site?',
	'description': formDesc,   //'Hi! We’re looking for people to participate in a 30 minute phone interview about how they use [agency.gov]. If selected, we’ll contact you to set up a time.',
	'send': buttonLabel,    //'Send'
});
