<div class="margin-y-3">
  <a
    id="button-toggle-timeout"
    href="#session-timeout-modal"
    class="hidden"
    aria-controls="session-timeout-modal"
    data-open-modal
    ></a
  >
  <div
    class="usa-modal"
    id="session-timeout-modal"
    aria-labelledby="modal-1-heading"
    aria-describedby="modal-1-description"
  >
    <div class="usa-modal__content">
      <div class="usa-modal__main">
        <h2 class="usa-modal__heading" id="modal-1-heading">
          Are you still using Touchpoints?
        </h2>
        <div class="usa-prose">
          <p id="modal-1-description">
            For security reasons,
            your session will timeout in 5 minutes due to inactivity.
            Do you want to extend your session?
          </p>
           <div class="timer" id="timer">ttt</div>
        </div>
        <div class="usa-modal__footer">
          <ul class="usa-button-group">
            <li class="usa-button-group__item">
              <a href="<%= admin_forms_path %>" class="usa-button" data-close-modal>
                Yes, continue using Touchpoints
              </a>
            </li>
            <li class="usa-button-group__item">
              <%= link_to destroy_user_session_path,
                class: "usa-button usa-button--unstyled padding-105 text-center",
                "data-close-modal" => true do %>
                Sign out
                <% end %>
            </li>
          </ul>
        </div>
      </div>
      <button
        type="button"
        class="usa-button usa-modal__close"
        aria-label="Close this window"
        data-close-modal
      >
        <svg class="usa-icon" aria-hidden="true" focusable="false" role="img">
          <use xlink:href="/assets/img/sprite.svg#close"></use>
        </svg>
      </button>
    </div>
  </div>
</div>

<script>
  const timeoutInMinutes = 25 * 60 * 1000;
  const toggleTimeout = document.getElementById('button-toggle-timeout');
  setTimeout(function() {
      // a roundabout way to call toggleModal
      setTimer()
      toggleTimeout.click();
  }, timeoutInMinutes)


  // set a 5 minute timer
  function setTimer() {
    let timeLeft = 5 * 60; // 5 minutes in seconds
    const timerElement = document.getElementById('timer');

    // Update the countdown timer every second
    const countdown = setInterval(() => {
      const minutes = Math.floor(timeLeft / 60);
      const seconds = timeLeft % 60;
      timerElement.textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
      timeLeft--;

      if (timeLeft < 0) {
        location.reload();
        clearInterval(countdown);
      }
    }, 1000);

    // Refresh the page after 5 minutes and 10 seconds (310 seconds)
    setTimeout(() => {
      location.reload();
    }, 310 * 1000);
  }
</script>