<% content_for :navigation_title do %>
  Editing Delivery method for: <%= @form.name %>
<% end %>
<p>
  <%= link_to admin_forms_path do %>
    <i class="fa fa-arrow-circle-left"></i>
    Back to Forms
  <% end %>
</p>
<%= render 'admin/forms/nav', form: @form %>
<%= render 'admin/forms/step_indicator', form: @form %>
<br>
<%= form_with(model: @form, url: (@form.persisted? ? admin_form_path(@form) : admin_forms_path), local: true) do |f| %>
  <%- if @form.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@form.errors.count, "error") %> prohibited this form from being saved:</h2>

      <% @form.errors.full_messages.each do |message| %>
        <div class="usa-alert usa-alert--error">
          <div class="usa-alert__body">
            <h3 class="usa-alert__heading">Error</h3>
            <p class="usa-alert__text">
              <%= message %>
            </p>
          </div>
        </div>
      <% end %>
    </div>
  <% end %>

  <div class="grid-row grid-gap-lg">
    <div class="desktop:grid-col-8">
      <div>
        <div class="usa-alert usa-alert--info">
          <div class="usa-alert__body">
            <p class="usa-alert__text">
              <strong>How will users access this form?</strong>
              <br>
              When a Touchpoints form is published,
              it will be available at a URL on the Touchpoints application.
              <br>
              <br>

              Additionally, a form can be embedded on an existing web property
              using one of three different methods:
              <ol>
                <li>
                  <strong>Blue USWDS button &amp; modal</strong> -
                  Touchpoints will insert a blue USWDS button on your website with
                  the text that you indicate.
                  Clicking the button will launch a USWDS modal window displaying the form.
                </li>
                <li>
                  <strong>Custom button &amp; modal</strong> -
                  Works like the modal, except you provide your own custom
                  styled button with the use of a
                  #html-element-id.
                </li>
                <li>
                  <strong>Inline</strong> -
                  embed a form directly onto your
                  website by specifying #dom-element-id.
                </li>
              </ol>
            </p>
          </div>
        </div>

        <br>
        <div class="grid-row grid-gap-lg">
          <div class="grid-col-6">
            <fieldset class="usa-fieldset  usa-form">
              How will users access this form?
              <br>
              <legend class="usa-sr-only">Delivery methods</legend>
              <% Form::DELIVERY_METHODS.each_with_index do |delivery_method, index| %>
                <div class="usa-radio">
                  <%= f.radio_button :delivery_method, delivery_method[0], class: "usa-radio__input usa-radio__input--tile" %>
                  <%= f.label delivery_method[1], class: "usa-radio__label", for: "form_delivery_method_#{delivery_method[0]}" %>
                </div>
              <% end %>
            </fieldset>
          </div>
          <div class="grid-col-6">
            <div class="field" id="delivery-method-text" hidden>
              <%= f.label :modal_button_text, class: "usa-label" %>
              <%= f.text_field :modal_button_text, class: "usa-input" %>
            </div>
            <div class="field" id="delivery-method-html-id" hidden>
              <%= f.label :element_selector, class: "usa-label" %>
              <%= f.text_field :element_selector, class: "usa-input", placeholder: "html-element-id" %>
            </div>
          </div>
        </div>
        <br>
        <%= render 'components/whitelist_options', f: f %>
        <div class="grid-row">
          <div class="grid-col-6">
            <div class="field">
              <%= f.check_box :verify_csrf, class: "usa-checkbox__input" %>
              <%= f.label :verify_csrf, class: "usa-checkbox__label" do %>
                Verify CSRF?
                <br>
                <span class="usa-hint font-sans-2xs">
                  CSRF stands for "Cross-site Request Forgery."
                  <br>
                  When enabled, forms include a
                  <%= link_to "CSRF", "https://en.wikipedia.org/wiki/Cross-site_request_forgery", target: "_blank", rel: "noopener" %> token.
                  <br>
                  This setting should be enabled for Touchpoints-hosted forms.
                  <br>
                  Forms embedded on other sites are cross-site and should not check this box.
                  <br>
                  A CSRF will expire a form in a user's session after
                  <%= Devise.timeout_in / 60 %> minutes.
                </span>
              <% end %>
            </div>
          </div>
        </div>
        <p>
          <%= f.submit (@form.persisted? ? "Update Form" : "Create Form"), class: "usa-button width-full" %>
        </p>
      </div>
    </div>
    <div class="desktop:grid-col-4">
      <%= render 'admin/forms/task_bar', form: @form %>
    </div>

  </div>
<% end %>

<script>
  $(function() {
    $("#form_delivery_method_touchpoints-hosted-only").on("click", function() {
      $('#delivery-method-text').hide();
      $('#delivery-method-html-id').hide();
      $('#allowlist-options').hide();
    });
    $("#form_delivery_method_modal").on("click", function() {
      $('#delivery-method-text').show();
      $('#delivery-method-html-id').hide();
      $('#allowlist-options').show();
    });
    $("#form_delivery_method_custom-button-modal").on("click", function() {
      $('#delivery-method-text').hide();
      $('#delivery-method-html-id').show();
      $('#allowlist-options').show();
    });
    $("#form_delivery_method_inline").on("click", function() {
      $('#delivery-method-text').hide();
      $('#delivery-method-html-id').show();
      $('#allowlist-options').show();
    });

    $("#form_delivery_method_<%= @form.delivery_method %>").click();
  });
</script>
