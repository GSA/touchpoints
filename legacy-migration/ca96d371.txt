// Form components are namespaced under 'fba' = 'Feedback Analytics'
'use strict';

function FBAform(d, N) {
	return {
		css: '.fba-modal {\n  background-color: rgb(0, 0, 0, 0.375);\n  z-index: 10001;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  overflow-x: auto;\n  padding: 20px;\n}\n\n.fba-modal-dialog {\n  background: #fff;\n  border: 1px solid #E5E5E5;\n  margin: 0 auto 40px auto;\n  max-width: 35rem;\n  position: relative;\n}\n\n.fba-modal-dialog .wrapper {\n  padding-left: 20px;\n  padding-right: 20px;\n}\n\n.fixed-tab-button {\n  bottom: 0;\n  padding: 5px 10px;\n  position: fixed;\n  right: 12px;\n  z-index: 9999;\n\n}\n#fba-button.usa-button:hover,\n.fixed-tab-button.usa-button:hover {\n  color:white;\n  background-color:#1a4480;\n  border-bottom:0;\n  text-decoration:none;\n}\n\n#fba-modal-title {\n  margin-right: 20px;\n  margin-top: 0;\n  word-wrap: break-word;\n}\n\n#fba-text-name, #fba-text-email {\n  max-width: 100% !important;\n  font-size: 100%\n}\n\n.fba-modal-dialog .fba-modal-close {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 10px;\n  font-size: 24px;\n  color: #5b616b;\n  background: none;\n  line-height: 1;\n  text-decoration: none;\n  width: auto;\n  z-index: 10;\n}\n\n/* Form Sections */\n.touchpoints-form-wrapper form div.section {\n  display: none;\n}\n.touchpoints-form-wrapper form div.section.visible {\n  display: block;\n}\n\n.hide {\n  display: none;\n}\n\n\n/*! from USWDS  uswds v2.9.0 */\n#fba-button.usa-button{\n  font-family:Source Sans Pro Web, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;\n  font-size:1.06rem;\n  line-height:0.9;\n  -moz-osx-font-smoothing:grayscale;\n  -webkit-font-smoothing:antialiased;\n  color:white;\n  background-color:#005ea2;\n  -webkit-appearance:none;\n     -moz-appearance:none;\n          appearance:none;\n  border:0;\n  border-radius:0.25rem;\n  cursor:pointer;\n  display:inline-block;\n  font-weight:bold;\n  margin-right:0.5rem;\n  padding:0.75rem 1.25rem;\n  text-align:center;\n  text-decoration:none;\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0\n}\n\n.usa-skipnav.touchpoints-skipnav{\n  font-family:Source Sans Pro Web, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;\n  font-size:1.06rem;\n  line-height:1.5;\n  color:#005ea2;\n  text-decoration:underline;\n  background:transparent;\n  left:0;\n  padding:0.5rem 1rem;\n  position:absolute;\n  top:-3.8rem;\n  transition:0.15s ease-in-out;\n  z-index:100;\n}\n.usa-skipnav.touchpoints-skipnav:visited{\n  color:#54278f;\n}\n.usa-skipnav.touchpoints-skipnav:hover{\n  color:#1a4480;\n}\n.usa-skipnav.touchpoints-skipnav:active{\n  color:#162e51;\n}\n.usa-skipnav.touchpoints-skipnav:focus{\n  outline:0.25rem solid #2491ff;\n  outline-offset:0;\n}\n.usa-skipnav.touchpoints-skipnav:focus{\n  background:white;\n  left:0;\n  position:absolute;\n  top:0;\n  transition:0.2s ease-in-out;\n}\n\n.fba-modal-dialog abbr[title=required]{\n  text-decoration:none;\n}\n\n.fba-modal-dialog .usa-form{\n  font-family:Source Sans Pro Web, Helvetica Neue, Helvetica, Roboto, Arial, sans-serif;\n  font-size:1.06rem;\n  line-height:1.3;\n}\n@media all and (min-width: 30em){\n  .fba-modal-dialog .usa-form{\n    max-width:20rem;\n  }\n}\n.fba-modal-dialog .usa-form abbr[title=required]{\n  text-decoration:none;\n}\n.fba-modal-dialog .usa-form .usa-input,\n.fba-modal-dialog .usa-form .usa-range,\n.fba-modal-dialog .usa-form .usa-select,\n.fba-modal-dialog .usa-form .usa-textarea{\n  max-width:none;\n}\n.fba-modal-dialog .usa-form .usa-input--2xs,\n.fba-modal-dialog .usa-form .usa-input-group--2xs{\n  max-width:5ex;\n}\n.fba-modal-dialog .usa-form .usa-input--xs,\n.fba-modal-dialog .usa-form .usa-input-group--xs{\n  max-width:9ex;\n}\n.fba-modal-dialog .usa-form .usa-input--sm,\n.fba-modal-dialog .usa-form .usa-input--small,\n.fba-modal-dialog .usa-form .usa-input-group--sm,\n.fba-modal-dialog .usa-form .usa-input-group--small{\n  max-width:13ex;\n}\n.fba-modal-dialog .usa-form .usa-input--md,\n.fba-modal-dialog .usa-form .usa-input--medium,\n.fba-modal-dialog .usa-form .usa-input-group--md,\n.fba-modal-dialog .usa-form .usa-input-group--medium{\n  max-width:20ex;\n}\n.fba-modal-dialog .usa-form .usa-input--lg,\n.fba-modal-dialog .usa-form .usa-input-group--lg{\n  max-width:30ex;\n}\n.fba-modal-dialog .usa-form .usa-input--xl,\n.fba-modal-dialog .usa-form .usa-input-group--xl{\n  max-width:40ex;\n}\n.fba-modal-dialog .usa-form .usa-input--2xl,\n.fba-modal-dialog .usa-form .usa-input-group--2xl{\n  max-width:50ex;\n}\n.fba-modal-dialog .usa-form .usa-button{\n  margin-top:0.5rem;\n}\n@media all and (min-width: 30em){\n  .fba-modal-dialog .usa-form .usa-button{\n    margin-top:1.5rem;\n  }\n}\n.fba-modal-dialog .usa-form a:where(:not(.usa-button)){\n  color:#005ea2;\n  text-decoration:underline;\n}\n.fba-modal-dialog .usa-form a:where(:not(.usa-button)):visited{\n  color:#54278f;\n}\n.fba-modal-dialog .usa-form a:where(:not(.usa-button)):hover{\n  color:#1a4480;\n}\n.fba-modal-dialog .usa-form a:where(:not(.usa-button)):active{\n  color:#162e51;\n}\n.fba-modal-dialog .usa-form a:where(:not(.usa-button)):focus{\n  outline:0.25rem solid #2491ff;\n  outline-offset:0rem;\n}\n\n@media all and (min-width: 30em){\n  .usa-form--large{\n    max-width:30rem;\n  }\n}\n\n\n.fba-modal-dialog .usa-radio{\n  background:white;\n}\n\n.fba-modal-dialog .usa-radio__label{\n  color:#1b1b1b;\n}\n.fba-modal-dialog .usa-radio__label::before{\n  background:white;\n  box-shadow:0 0 0 2px #1b1b1b;\n}\n@media (forced-colors: active){\n  .fba-modal-dialog .usa-radio__label::before{\n    outline:2px solid transparent;\n    outline-offset:2px;\n  }\n}\n\n.fba-modal-dialog .usa-radio__input:checked + [class*=__label]::before{\n  background-color:#005ea2;\n  box-shadow:0 0 0 2px #005ea2;\n}\n.fba-modal-dialog .usa-radio__input:disabled + [class*=__label],\n.fba-modal-dialog .usa-radio__input[aria-disabled=true] + [class*=__label]{\n  color:#757575;\n}\n@media (forced-colors: active){\n  .fba-modal-dialog .usa-radio__input:disabled + [class*=__label],\n  .fba-modal-dialog .usa-radio__input[aria-disabled=true] + [class*=__label]{\n    color:GrayText;\n  }\n}\n.fba-modal-dialog .usa-radio__input:disabled + [class*=__label]::before,\n.fba-modal-dialog .usa-radio__input[aria-disabled=true] + [class*=__label]::before{\n  background-color:white;\n  box-shadow:0 0 0 2px #757575;\n}\n.fba-modal-dialog .usa-radio__input--tile + [class*=__label]{\n  background-color:white;\n  border:2px solid #c9c9c9;\n  color:#1b1b1b;\n}\n.fba-modal-dialog .usa-radio__input--tile:checked + [class*=__label]{\n  background-color:rgba(0, 94, 162, 0.1);\n  border-color:#005ea2;\n}\n@media (forced-colors: active){\n  .fba-modal-dialog .usa-radio__input--tile:checked + [class*=__label]{\n    border:ButtonText solid 0.25rem;\n  }\n}\n.fba-modal-dialog .usa-radio__input--tile:disabled + [class*=__label],\n.fba-modal-dialog .usa-radio__input--tile[aria-disabled=true] + [class*=__label]{\n  border-color:#e6e6e6;\n}\n.fba-modal-dialog .usa-radio__input--tile:disabled:checked + [class*=__label],\n.fba-modal-dialog .usa-radio__input--tile[aria-disabled=true]:checked + [class*=__label]{\n  background-color:white;\n}\n\n.fba-modal-dialog .usa-radio__input:checked + [class*=__label]::before{\n  box-shadow:0 0 0 2px #005ea2, inset 0 0 0 2px white;\n}\n@media (forced-colors: active){\n  .fba-modal-dialog .usa-radio__input:checked + [class*=__label]::before{\n    background-color:ButtonText;\n  }\n}\n.fba-modal-dialog .usa-radio__input:checked:disabled + [class*=__label]::before,\n.fba-modal-dialog .usa-radio__input:checked[aria-disabled=true] + [class*=__label]::before{\n  background-color:#757575;\n  box-shadow:0 0 0 2px #757575, inset 0 0 0 2px white;\n}\n@media (forced-colors: active){\n  .fba-modal-dialog .usa-radio__input:checked:disabled + [class*=__label]::before,\n  .fba-modal-dialog .usa-radio__input:checked[aria-disabled=true] + [class*=__label]::before{\n    background-color:GrayText;\n  }\n}\n\n.fba-modal-dialog .usa-radio__input{\n  position:absolute;\n  left:-999em;\n  right:auto;\n}\n.fba-modal-dialog .usa-radio__input:focus + [class*=__label]::before{\n  outline:0.25rem solid #2491ff;\n  outline-offset:0.25rem;\n}\n.fba-modal-dialog .usa-radio__input:disabled + [class*=__label]::before,\n.fba-modal-dialog .usa-radio__input[aria-disabled=true] + [class*=__label]::before{\n  cursor:not-allowed;\n}\n.fba-modal-dialog .usa-radio__input:disabled + [class*=__label],\n.fba-modal-dialog .usa-radio__input[aria-disabled=true] + [class*=__label]{\n  cursor:not-allowed;\n}\n.fba-modal-dialog .usa-radio__input--tile + [class*=__label]{\n  border-radius:0.25rem;\n  margin-top:0.5rem;\n  padding:0.75rem 1rem 0.75rem 2.5rem;\n}\n.fba-modal-dialog .usa-radio__input--tile + [class*=__label]::before{\n  left:0.5rem;\n}\n\n@media print{\n  .fba-modal-dialog .usa-radio__input:checked + [class*=__label]::before{\n    box-shadow:inset 0 0 0 2px white, inset 0 0 0 1rem #005ea2, 0 0 0 2px #005ea2;\n  }\n}\n\n.fba-modal-dialog .usa-radio__label{\n  cursor:pointer;\n  display:inherit;\n  font-weight:normal;\n  margin-top:0.75rem;\n  padding-left:2rem;\n  position:relative;\n}\n.fba-modal-dialog .usa-radio__label::before{\n  content:\" \";\n  display:block;\n  left:0;\n  margin-left:2px;\n  margin-top:0.064rem;\n  position:absolute;\n}\n\n.fba-modal-dialog .usa-radio__label::before{\n  height:1.25rem;\n  border-radius:99rem;\n  width:1.25rem;\n}\n\n.fba-modal-dialog .usa-radio__label-description{\n  display:block;\n  font-size:0.93rem;\n  margin-top:0.5rem;\n}\n\n\n\n/* Override */\n.fba-modal-dialog .usa-form {\n  max-width: inherit;\n}\n\n/* Custom */\n.touchpoints-form-wrapper .usa-banner {\n  margin-top: 10px;\n}\n\n.usa-banner__header.touchpoints-footer-banner {\n  min-height: 0;\n}\n\n.fba-modal-dialog .question-options.big-thumbs .usa-radio__label::before {\n  display: none;\n}\n\n/* Same max-width as texarea */\n.touchpoints-form-body .big-thumbs {\n  max-width: 35rem;\n}\n\n.question-options.big-thumbs .usa-radio__input--tile+.usa-radio__label {\n  color: #005ea2;\n  padding-left: 1rem;\n}\n\n.touchpoint-form .question-options {\n  clear: both;\n}\n\n.touchpoint-form {\n  max-width: 35em;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.fba-modal-dialog .margin-top-3{\n  margin-top:1.5rem;\n}\n\n/* Override */\n.touchpoint-form .usa-form--large {\n  max-width: 35rem;\n}\n\n.fba-modal-dialog .usa-sr-only{\n  position:absolute;\n  left:-999em;\n  right:auto;\n}\n\n/* big thumbs up down buttons */\n.fba-modal-dialog .usa-icon{\n  display:inline-block;\n  fill:currentColor;\n  height:1em;\n  position:relative;\n  width:1em;\n}\n\n.fba-modal-dialog .margin-top-2 {\n  margin-top:1rem;\n}\n\n.fba-modal-dialog .text-center{\n  text-align:center;\n}\n\n.fba-modal-dialog .font-sans-3xl{\n  font-size:3.19rem;\n}\n\n.fba-modal-dialog .margin-bottom-2 {\n  margin-bottom:1rem;\n}\n\n.fba-modal-dialog .margin-bottom-3 {\n  margin-top:1.5rem;\n}\n\n.fba-modal-dialog .text-right{\n  text-align:right;\n}\n\n.fba-modal-dialog .text-bold{\n  font-weight:700;\n}\n\n.fba-modal-dialog .usa-button .margin-top-0{\n  margin-top:0;\n}\n\n.fba-modal-dialog .previous-section.usa-button{\n  margin-top:0;\n}\n\n.fba-modal-dialog .border-0{\n  border:0 solid;\n}\n\n.fba-modal-dialog .border-gray-10{\n  border-color:#e6e6e6;\n}\n\n.fba-modal-dialog .border-top{\n  border-top:1px solid;\n}\n\n.fba-modal-dialog .display-none{\n  display:none;\n}',
		formId: "ca96d371",
		formComponent: function() {
			return document.querySelector("[data-touchpoints-form-id='" + this.formId + "']")
		},
		formElement: function() {
			return this.formComponent().querySelector("form");
		},
		activatedButton: null, // tracks a reference to the button that was clicked to open the modal
		isFormSubmitted: false, // defaults to false

		// enable Javascript experience
		javscriptIsEnabled: function() {
			var javascriptDisabledMessage = document.getElementsByClassName("javascript-disabled-message")[0];
			var touchpointForm = document.getElementsByClassName("touchpoint-form")[0];
			if (javascriptDisabledMessage) {
				javascriptDisabledMessage.classList.add("hide");
			}
			if (touchpointForm) {
				touchpointForm.classList.remove("hide");
			}
		},
		init: function(options) {
			this.javscriptIsEnabled();
			this.options = options;
			this.loadCss();
			this.loadHtml();
			this.bindEventListeners();
			this.dialogOpen = false; // initially false
			this.successState = false; // initially false
			this.pagination();
			this.formSpecificScript();
			document.dispatchEvent(new Event('onTouchpointsFormLoaded'));
			return this;
		},
		formSpecificScript: function() {
		},
		bindEventListeners: function() {
			var self = this;
			d.addEventListener('keyup', function (event) {
				var x = event.keyCode;
				if( x == 27 && self.dialogOpen == true) {
					self.closeDialog();
				}
			});
			d.addEventListener('click', function (event) {
				self.handleClick(event);
			});

			const textareas = this.formComponent().querySelectorAll(".usa-textarea");
			textareas.forEach(function(textarea) {
				if (textarea.getAttribute("maxlength") != '0' && textarea.getAttribute("maxlength") != '10000')  {
					textarea.addEventListener("keyup", self.textCounter);
				}
			});

			const textFields = this.formComponent().querySelectorAll(".usa-input[type='text']");
			textFields.forEach(function(textField) {
				if (textField.getAttribute("maxlength") != '0' && textField.getAttribute("maxlength") != '10000')  {
					textField.addEventListener("keyup", self.textCounter);
				}
			});

		},
		loadCss: function() {
			var style = document.createElement('style');
			style.innerHTML = this.css;
			d.head.appendChild(style);
		},
		loadHtml: function() {

			var otherElements = d.querySelectorAll(".usa-input.other-option");
			for (var i = 0; i < otherElements.length; i++) {
				otherElements[i].addEventListener('keyup', this.handleOtherOption.bind(this), false);
			}
			var phoneElements = d.querySelectorAll("input[type='tel']");
			for (var i = 0; i < phoneElements.length; i++) {
				phoneElements[i].addEventListener('keyup', this.handlePhoneInput.bind(this), false);
			}

			var formElement = this.formElement();
			// returns 1 or more submit buttons within the Touchpoints form
			var submitButtons = formElement.querySelectorAll("[type='submit']");
			var that = this;

			var yesNoForm = formElement.querySelector('.touchpoints-yes-no-buttons');

			if (yesNoForm) { // only for yes/no questions
				Array.prototype.forEach.call(submitButtons, function(submitButton) {
					submitButton.addEventListener('click', that.handleYesNoSubmitClick.bind(that), false);
				})
			} else { // for all other types of forms/questions
				if (submitButtons) {
					Array.prototype.forEach.call(submitButtons, function(submitButton) {
						submitButton.addEventListener('click', that.handleSubmitClick.bind(that), false);
					})
				}
			}
		},
		resetErrors: function() {
			var formComponent = this.formComponent();
			var alertElement = formComponent.querySelector(".fba-alert");
			var alertElementHeading = formComponent.getElementsByClassName("usa-alert__heading")[0];
			var alertElementBody = formComponent.getElementsByClassName("usa-alert__text")[0];
			var alertErrorElement = formComponent.querySelector(".fba-alert-error");
			var alertErrorElementBody = alertErrorElement.getElementsByClassName("usa-alert__text")[0];
			alertElement.setAttribute("hidden", true);
			alertElementHeading.innerHTML = "";
			alertElementBody.innerHTML = "";
			alertErrorElement.setAttribute("hidden", true);
			alertErrorElementBody.innerHTML = "";
		},
		handleClick: function(e) {
		},
		handleButtonClick: function(e) {
			e.preventDefault();
			this.activatedButton = e.target;
			this.loadDialog();
		},
		handleDialogClose: function(e) {
			e.preventDefault();
			this.closeDialog();
		},
		handleOtherOption: function(e) {
			var selectorId =  "#" + e.srcElement.getAttribute("data-option-id");
			var other_val = e.target.value.replace(/,/g, '');
			if (other_val == '') other_val = 'other';
			var option = this.formElement().querySelector(selectorId);
			option.value = other_val;
		},
		handlePhoneInput: function(e) {
		    var number = e.srcElement.value.replace(/[^\d]/g, '');
		    if (number.length == 7) {
		      number = number.replace(/(\d{3})(\d{4})/, "$1-$2");
		    } else if (number.length == 10) {
		      number = number.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3");
		    }
		    e.srcElement.value = number;
		},
		handleEmailInput: function(e) {
			var EmailRegex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
			var email = e.srcElement.value.trim();
			if (email.length == 0) {
				return;
			}
			result = EmailRegex.test(email);
			if (!result) {
				showWarning($(this),"Please enter a valid email address");
			} else {
				showValid($(this));
	    	}
		    e.srcElement.value = number;
		},
		handleSubmitClick: function(e) {
			e.preventDefault();
			this.resetErrors();
			var formElement = this.formElement();
			var self = this;
			if (self.validateForm(formElement)) {
				// disable submit button and show sending feedback message
				var submitButton = formElement.querySelector("[type='submit']");
				submitButton.disabled = true;
				submitButton.classList.add("aria-disabled");
				self.sendFeedback();
			}
		},
		handleYesNoSubmitClick: function(e) {
			e.preventDefault();

			var input = this.formComponent().querySelector('.fba-touchpoints-page-form');
			input.value = e.target.value;
			this.resetErrors();
			var self = this;
			var formElement = this.formElement();
			if (self.validateForm(formElement)) {
				var submitButtons = formElement.querySelectorAll("[type='submit']");
				Array.prototype.forEach.call(submitButtons, function(submitButton) {
					submitButton.disabled = true;
				})
				self.sendFeedback();
			}
		},
		validateForm: function(form) {
			this.hideValidationError(form);
			var valid = this.checkRequired(form) && this.checkEmail(form) && this.checkPhone(form)  && this.checkDate(form);
			return valid;
		},
		checkRequired: function(form) {
			var requiredItems = form.querySelectorAll('[required]');
			var questions = {};
			// Build a dictionary of questions which require an answer
			Array.prototype.forEach.call(requiredItems, function(item) { questions[item.name] = item });

			Array.prototype.forEach.call(requiredItems, function(item) {
				switch (item.type) {
				case 'radio':
					if (item.checked) delete(questions[item.name]);
					break;
				case 'checkbox':
				  if (item.checked) delete(questions[item.name]);
					break;
				case 'select-one':
					if (item.selectedIndex > 0) delete(questions[item.name]);
					break;
				default:
					if (item.value.length > 0) delete(questions[item.name]);
				}
			});
			for (var key in questions) {
				this.showValidationError(questions[key],'A response is required: ');
				return false;
			}
			return true;
		},
		checkDate: function(form) {
			var dateItems = form.querySelectorAll('.date-select');
			var questions = {};
			// Build a dictionary of questions which require an answer
			Array.prototype.forEach.call(dateItems, function(item) { questions[item.name] = item });
			Array.prototype.forEach.call(dateItems, function(item) {
			  if (item.value.length == 0) {
			  	delete(questions[item.name]);
			  } else {
				var isValidDate = Date.parse(item.value);
			    if (!isNaN(isValidDate)) delete(questions[item.name]);
			  }
			});
			for (var key in questions) {
				this.showValidationError(questions[key],'Please enter a valid value: ');
				return false;
			}
			return true;
		},
		checkEmail: function(form) {
			var emailItems = form.querySelectorAll('input[type="email"]');
			var questions = {};
			// Build a dictionary of questions which require an answer
			Array.prototype.forEach.call(emailItems, function(item) { questions[item.name] = item });
			Array.prototype.forEach.call(emailItems, function(item) {
			  if (item.value.length == 0) {
			  	delete(questions[item.name]);
			  } else {
			    var EmailRegex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
			    if (EmailRegex.test(item.value)) delete(questions[item.name]);
			  }
			});
			for (var key in questions) {
				this.showValidationError(questions[key],'Please enter a valid value: ');
				return false;
			}
			return true;
		},
		checkPhone: function(form) {
			var phoneItems = form.querySelectorAll('input[type="tel"]');
			var questions = {};
			// Build a dictionary of questions which require an answer
			Array.prototype.forEach.call(phoneItems, function(item) { questions[item.name] = item });
			Array.prototype.forEach.call(phoneItems, function(item) {
			  if (item.value.length == 0) {
			  	delete(questions[item.name]);
			  } else {
				const PhoneRegex = /^\(\d{3}\) \d{3}-\d{4}$/;
			    if (PhoneRegex.test(item.value)) delete(questions[item.name]);
			  }
			});
			for (var key in questions) {
				this.showValidationError(questions[key],'Please enter a valid value: ');
				return false;
			}
			return true;
		},
		showValidationError: function(question,error) {
			var questionDiv = question.closest(".question");
			var label = questionDiv.querySelector(".usa-label") || questionDiv.querySelector(".usa-legend");
			var questionNum = label.innerText;

			// show page with validation error
			var errorPage = question.closest(".section");
			if (!errorPage.classList.contains("visible")) {
				var visiblePage = this.formComponent().getElementsByClassName("section visible")[0];
				visiblePage.classList.remove("visible");
				errorPage.classList.add("visible");
			}

			questionDiv.setAttribute('class', 'usa-form-group usa-form-group--error');
			var span = document.createElement('span');
			span.setAttribute('id', 'input-error-message');
			span.setAttribute('role','alert');
			span.setAttribute('class','usa-error-message');
			span.innerText = error + questionNum;
			label.parentNode.insertBefore(span, label.nextSibling);
			var input = document.createElement('input');
			input.setAttribute('hidden', 'true');
			input.setAttribute('id','input-error');
			input.setAttribute('type','text');
			input.setAttribute('name','input-error');
			input.setAttribute('aria-describedby','input-error-message');
			questionDiv.appendChild(input);
			questionDiv.scrollIntoView();
			questionDiv.focus();

			// enable submit button ( so user can fix error and resubmit )
			var submitButton = document.querySelector("[type='submit']");
			submitButton.disabled = false;
			submitButton.classList.remove("aria-disabled");
		},
		hideValidationError: function(form) {
			var elem = form.querySelector('.usa-form-group--error');
			if (elem == null) return;
			elem.setAttribute('class','question');
			var elem = form.querySelector('#input-error-message');
			if (elem != null) elem.parentNode.removeChild(elem);
			elem = form.querySelector('#input-error');
			if (elem != null) elem.parentNode.removeChild(elem);
		},
		textCounter: function(event) {
			const field = event.target;
			const maxLimit = event.target.getAttribute("maxlength");

			var countfield = field.parentNode.querySelector(".counter-msg");
			if (field.value.length > maxLimit) {
				field.value = field.value.substring(0, maxLimit);
				countfield.innerText = '0 characters left';
				return false;
			} else {
				countfield.innerText = "" + (maxLimit - field.value.length) + " characters left";
			}
		},
		loadButton: function() {
			// Add the fixed, floating tab button
			this.buttonEl = document.createElement('a');
			this.buttonEl.setAttribute('id', 'fba-button');
			this.buttonEl.setAttribute('data-id', 'ca96d371');
			this.buttonEl.setAttribute('class', 'fixed-tab-button usa-button');
			this.buttonEl.setAttribute('href', '#');
			this.buttonEl.setAttribute('aria-haspopup', 'dialog');
			this.buttonEl.setAttribute('aria-controls', 'dialog');
			this.buttonEl.addEventListener('click', this.handleButtonClick.bind(this), false);
			this.buttonEl.innerHTML = this.options.modalButtonText;
			d.body.appendChild(this.buttonEl);

			this.loadFeebackSkipLink();
		},
		loadFeebackSkipLink: function() {
			this.skipLink = document.createElement('a');
			this.skipLink.setAttribute('class', 'usa-skipnav touchpoints-skipnav');
			this.skipLink.setAttribute('href', '#fba-button');
			this.skipLink.addEventListener('click', function() {
				document.querySelector("#fba-button").focus();
			});
			this.skipLink.innerHTML = 'Skip to feedback';

			var existingSkipLinks = document.querySelector('.usa-skipnav');
			if(existingSkipLinks) {
				existingSkipLinks.insertAdjacentElement('afterend', this.skipLink);
			} else {
				d.body.prepend(this.skipLink);
			}
		},
		// Used when in a modal
		loadDialog: function() {
			document.dispatchEvent(new Event('onTouchpointsModalOpen'));
			d.querySelector('.fba-modal').removeAttribute("hidden");
			d.getElementById("touchpoints-form-ca96d371").focus();
			this.dialogOpen = true;
		},
		closeDialog: function() {
			document.dispatchEvent(new Event('onTouchpointsModalClose'));
			d.querySelector('.fba-modal').setAttribute("hidden", true);
			this.activatedButton.focus();
			this.dialogOpen = false;
		},
		sendFeedback: function() {
			document.dispatchEvent(new Event('onTouchpointsFormSubmission'));
			var form = this.formElement();
			this.ajaxPost(form, this.formSuccess);
		},
		successHeadingText: function() {
			return "Success";
		},
		successText: function() {
			return "Thank you. Your feedback has been received.";
		},
		showFormSuccess: function(e) {
			var formComponent = this.formComponent();
			var formElement = this.formElement();
			var alertElement = formComponent.querySelector(".fba-alert");
			var alertElementHeading = formComponent.querySelector(".usa-alert__heading");
			var alertElementBody = formComponent.querySelector(".usa-alert__text");

			// Display success Message
			alertElementHeading.innerHTML += this.successHeadingText();
			alertElementBody.innerHTML = this.successText();
			alertElement.removeAttribute("hidden");

			// Hide Form Elements
			if (formElement) {
				// And clear the Form's Fields
				formElement.reset();
				if (formElement.querySelector('.touchpoints-form-body')) {
					var formBody = formElement.querySelector('.touchpoints-form-body');
					if(formBody) {
						formBody.setAttribute("hidden", true);
					}
				}
				if (formComponent.querySelector('.touchpoints-form-disclaimer')) {
					var formDisclaimer = formComponent.querySelector('.touchpoints-form-disclaimer');
					if(formDisclaimer) {
						formDisclaimer.setAttribute("hidden", true);
					}
				}

			}
		},
		resetFormDisplay: function()
		{
			if (this.successState === false) {
				return false;
			}

			// Hide and Reset Flash Message
			this.resetErrors();

			// Re-enable Submit Button
			var formElement = this.formElement();
			var submitButton = formElement.querySelector("[type='submit']");
			submitButton.disabled = false;

			// Show Form Elements
			if (formElement) {
				if (formElement.querySelector('.touchpoints-form-body')) {
					var formBody = formElement.querySelector('.touchpoints-form-body')
					if(formBody) {
						formBody.removeAttribute("hidden");
					}
				}
			}
		},
		formSuccess: function(e) {
			// Clear the alert box
			var formComponent = this.formComponent();
			var alertElement = formComponent.querySelector(".fba-alert");
			var alertElementBody = formComponent.getElementsByClassName("usa-alert__text")[0];
			var alertErrorElement = formComponent.querySelector(".fba-alert-error");
			var alertErrorElementBody = alertErrorElement.getElementsByClassName("usa-alert__text")[0];
			alertElementBody.innerHTML = "";
			alertErrorElementBody.innerHTML = "";

			var formElement = this.formElement();
			var submitButton = formElement.querySelector("[type='submit']");

			if (e.target.readyState === 4) {
	      		if (e.target.status === 201) { // SUCCESS!
					this.successState = true;
					document.dispatchEvent(new Event('onTouchpointsFormSubmissionSuccess'));
					this.isFormSubmitted = true;
					if(submitButton) {
						submitButton.disabled = true;
					}
					this.showFormSuccess();
				} else if (e.target.status === 422) { // FORM ERRORS
					this.successState = false;
					document.dispatchEvent(new Event('onTouchpointsFormSubmissionError'));
					if(submitButton) {
						submitButton.disabled = false;
					}

					var jsonResponse = JSON.parse(e.target.response);
					var errors = jsonResponse.messages;

					for (var err in errors) {
						if (errors.hasOwnProperty(err)) {
							alertErrorElementBody.innerHTML += err;
							alertErrorElementBody.innerHTML += " ";
							alertErrorElementBody.innerHTML += errors[err];
							alertErrorElementBody.innerHTML += "<br />";
						}
					}

					alertErrorElement.removeAttribute("hidden");
				} else { // OTHER SERVER ERROR
					alertErrorElement.removeAttribute("hidden");
					alertErrorElementBody.innerHTML += "Server error. We're sorry, but this submission was not successful. The Product Team has been notified.";
				}
			}
		},
		ajaxPost: function (form, callback) {
	    var url = form.action;
	    var xhr = new XMLHttpRequest();

			// for each form question
			var params = {
				answer_01:
				form.querySelector("#answer_01") && form.querySelector("#answer_01").value,
				answer_02:
				form.querySelector("#answer_02") && form.querySelector("#answer_02").value,
				answer_03:
				form.querySelector("#answer_03") && form.querySelector("#answer_03").value,
			}

			// Combine Referrer and Pathname with Form-specific params
			params["referer"] = d.referrer;
			params["hostname"] = window.location.hostname;
			params["page"] = window.location.pathname;
			params["location_code"] = form.querySelector("#fba_location_code") ? form.querySelector("#fba_location_code").value : null;
			params["fba_directive"] = form.querySelector("#fba_directive") ? form.querySelector("#fba_directive").value : null;
			params["language"] = "en";

			// Submit Feedback with a POST
			xhr.open("POST", url);
			xhr.setRequestHeader("Content-Type", "application/json; charset=UTF-8;");
	    xhr.onload = callback.bind(this);
	    xhr.send(JSON.stringify({
				"submission": params,
			}));
		},
		currentPageNumber: 1, // start at 1
		showInstructions: function() {
			const instructions = this.formComponent().getElementsByClassName("fba-instructions")[0];

			if(instructions) {
				if (this.currentPageNumber == 1) {
					instructions.removeAttribute("hidden");
				} else {
					instructions.setAttribute("hidden", true);
				}
			}

			const requiredQuestionsNotice = this.formComponent().getElementsByClassName("required-questions-notice")[0];
			if(requiredQuestionsNotice) {
				if (this.currentPageNumber == 1) {
					requiredQuestionsNotice.removeAttribute("hidden");
				} else {
					requiredQuestionsNotice.setAttribute("hidden", true);
				}
			}
		},
		pagination: function() {
			var previousButtons = document.getElementsByClassName("previous-section");
			var nextButtons = document.getElementsByClassName("next-section");

			var self = this;
			for (var i = 0; i < previousButtons.length; i++) {
				previousButtons[i].addEventListener('click', function(e) {
					e.preventDefault();
					var currentPage = e.target.closest(".section");
					if (!this.validateForm(currentPage)) return false;
					currentPage.classList.remove("visible");
					this.currentPageNumber--;
					this.showInstructions();

					const previousPageEvent = new Event('onTouchpointsFormPreviousPage');
					previousPageEvent.page = this.currentPageNumber;
					document.dispatchEvent(previousPageEvent);

					currentPage.previousElementSibling.classList.add("visible");

					// if in a modal, scroll to the top of the modal on previous button click
					if(document.getElementsByClassName("fba-modal")[0]) {
						document.getElementsByClassName("fba-modal")[0].scrollTo(0,0);
					} else {
						window.scrollTo(0, 0);
					}
				}.bind(self));
			}
			for (var i = 0; i < nextButtons.length; i++) {
				nextButtons[i].addEventListener('click', function(e) {
					e.preventDefault();
					var currentPage = e.target.closest(".section");
					if (!this.validateForm(currentPage)) return false;
					currentPage.classList.remove("visible");
					this.currentPageNumber++;
					this.showInstructions();

					const nextPageEvent = new Event('onTouchpointsFormNextPage');
					nextPageEvent.page = this.currentPageNumber;
					document.dispatchEvent(nextPageEvent);

					currentPage.nextElementSibling.classList.add("visible");
					window.scrollTo(0, 0);

					// if in a modal, scroll to the top of the modal on next button click
					if(document.getElementsByClassName("fba-modal")[0]) {
						document.getElementsByClassName("fba-modal")[0].scrollTo(0,0);
					} else {
						window.scrollTo(0, 0);
					}
				}.bind(self))
			}
		}
	};
};

// Form Settings
var formOptions = {
	'modalButtonText': "Help improve this site",
	'formId': "ca96d371",
	'elementSelector': "",

};

// Create unique Touchpoints form object
const touchpointFormca96d371 = new FBAform(document, window).init(formOptions);
